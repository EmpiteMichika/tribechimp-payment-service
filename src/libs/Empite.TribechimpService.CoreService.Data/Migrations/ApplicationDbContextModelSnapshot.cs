// <auto-generated />
using System;
using Empite.TribechimpService.PaymentService.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Empite.TribechimpService.PaymentService.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Empite.TribechimpService.PaymentService.Domain.Entity.InvoiceRelated.InvoiceContact", b =>
                {
                    b.Property<string>("UserId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<Guid?>("CreatedBy");

                    b.Property<DateTime?>("DeletedAt");

                    b.Property<Guid?>("DeletedBy");

                    b.Property<string>("Email");

                    b.Property<string>("OrganizationId");

                    b.Property<DateTime?>("UpdatedAt");

                    b.Property<Guid?>("UpdatedBy");

                    b.Property<string>("ZohoContactUserId");

                    b.Property<string>("ZohoPrimaryContactId");

                    b.HasKey("UserId");

                    b.HasIndex("ZohoContactUserId");

                    b.ToTable("InvoiceContacts");
                });

            modelBuilder.Entity("Empite.TribechimpService.PaymentService.Domain.Entity.InvoiceRelated.RecurringInvoice", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<Guid?>("CreatedBy");

                    b.Property<DateTime?>("DeletedAt");

                    b.Property<Guid?>("DeletedBy");

                    b.Property<string>("InvoiceContactUserId");

                    b.Property<bool>("IsDue");

                    b.Property<string>("RecurringInvoiceId");

                    b.Property<DateTime?>("UpdatedAt");

                    b.Property<Guid?>("UpdatedBy");

                    b.HasKey("Id");

                    b.HasIndex("InvoiceContactUserId");

                    b.ToTable("RecurringInvoices");
                });

            modelBuilder.Entity("Empite.TribechimpService.PaymentService.Domain.Entity.InvoiceRelated.ZohoInvoiceJobQueue", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<Guid?>("CreatedBy");

                    b.Property<DateTime?>("DeletedAt");

                    b.Property<Guid?>("DeletedBy");

                    b.Property<bool>("IsSuccess");

                    b.Property<int>("JobType");

                    b.Property<string>("JsonData")
                        .HasColumnType("longtext");

                    b.Property<string>("LastErrorMessage")
                        .HasColumnType("longtext");

                    b.Property<int>("ReTryCount");

                    b.Property<DateTime?>("UpdatedAt");

                    b.Property<Guid?>("UpdatedBy");

                    b.HasKey("Id");

                    b.ToTable("ZohoInvoiceJobQueues");
                });

            modelBuilder.Entity("Empite.TribechimpService.PaymentService.Domain.Entity.InvoiceRelated.ZohoItem", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<Guid?>("CreatedBy");

                    b.Property<DateTime?>("DeletedAt");

                    b.Property<Guid?>("DeletedBy");

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.Property<double>("Rate");

                    b.Property<DateTime?>("UpdatedAt");

                    b.Property<Guid?>("UpdatedBy");

                    b.Property<string>("ZohoItemId");

                    b.HasKey("Id");

                    b.HasIndex("ZohoItemId");

                    b.ToTable("ZohoItems");
                });

            modelBuilder.Entity("Empite.TribechimpService.PaymentService.Domain.Entity.InvoiceRelated.ZohoItemRecurringInvoice", b =>
                {
                    b.Property<string>("RecurringInvoiceId");

                    b.Property<string>("ZohoItemId");

                    b.HasKey("RecurringInvoiceId", "ZohoItemId");

                    b.HasIndex("ZohoItemId");

                    b.ToTable("ZohoItemRecurringInvoice");
                });

            modelBuilder.Entity("Empite.TribechimpService.PaymentService.Domain.Entity.InvoiceRelated.RecurringInvoice", b =>
                {
                    b.HasOne("Empite.TribechimpService.PaymentService.Domain.Entity.InvoiceRelated.InvoiceContact", "InvoiceContact")
                        .WithMany("RecurringInvoices")
                        .HasForeignKey("InvoiceContactUserId");
                });

            modelBuilder.Entity("Empite.TribechimpService.PaymentService.Domain.Entity.InvoiceRelated.ZohoItemRecurringInvoice", b =>
                {
                    b.HasOne("Empite.TribechimpService.PaymentService.Domain.Entity.InvoiceRelated.RecurringInvoice", "RecurringInvoice")
                        .WithMany("ZohoItems")
                        .HasForeignKey("RecurringInvoiceId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Empite.TribechimpService.PaymentService.Domain.Entity.InvoiceRelated.ZohoItem", "ZohoItem")
                        .WithMany("RecurringInvoices")
                        .HasForeignKey("ZohoItemId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
